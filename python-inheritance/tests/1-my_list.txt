================
List Inheritance
================

Import class
------------
>>> MyList = __import__('1-my_list'). MyList

Normal Cases
------------

>>> ml = MyList()
>>> ml.print_sorted()
[]

>>> ml.append(1)
>>> ml.print_sorted()
[1]

>>> ml.append(1)
>>> ml.append(4)
>>> ml.append(2)
>>> ml.append(3)
>>> ml.append(5)
>>> print(ml)
[1, 1, 4, 2, 3, 5]

>>> ml.print_sorted()
[1, 1, 2, 3, 4, 5]

>>> print(ml)
[1, 1, 4, 2, 3, 5]

>>> ml.append(1.2)
>>> ml.print_sorted()
[1, 1, 1.2, 2, 3, 4, 5]

>>> ml2 = MyList()
>>> ml2.append(5)
>>> ml2.append(1)
>>> ml2.append(-1)
>>> ml2.append(51)
>>> ml2.append(-5)
>>> ml2.print_sorted()
[-5, -1, 1, 5, 51]

Inserting mixed types str and int in list
-----------------------------------------

>>> ml.append("a")
>>> ml.print_sorted()
Traceback (most recent call last):
TypeError: '<' not supported between instances of 'str' and 'int'

Using a not defined object
--------------------------

>>> ml3.print_sorted()
Traceback (most recent call last):
NameError: name 'ml3' is not defined

Using only a list
---------------------------
>>> alist = [1, 2, 3]
>>> alist.print_sorted()
Traceback (most recent call last):
AttributeError: 'list' object has no attribute 'print_sorted'
